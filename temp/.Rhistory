model6 <- lme4::lmer(memory ~ age06 + time*hv + timesq*lnwmh +
hv*lnwmh + sex + educationyears + time*gmvnohv + gmvnohv*lnwmh +
(1 + time|rundmcs),
data=df, REML=F)
lmer(memory ~ age06 + time*hv + timesq*lnwmh +
hv*lnwmh + sex + educationyears + time*gmvnohv + gmvnohv*lnwmh +
(1 + time|rundmcs),
data=df, REML=F)
library(ggplot2)
# Setting up working directory
setwd("\\\\umcfs034/NEUROuser$/Z515179/Documenten_Esther/OiO/R/Regression")
getwd()
WorkingDir<-"\\\\umcfs034/NEUROuser$/Z515179/Documenten_Esther/OiO/R/Regression/Barplots/"
data = read.csv("Regression_Cognition_R.csv", sep=";", dec=",")
data$SVD_3groups_0615[data$SVD_3groups_0615=="0"] <- "Stable SVD"
data$SVD_3groups_0615[data$SVD_3groups_0615=="1"] <- "SVD regression"
data$SVD_3groups_0615[data$SVD_3groups_0615=="2"] <- "SVD progression"
data$SVD_3groups_0615 <- factor(data$SVD_3groups_0615, levels=c("Stable SVD", "SVD regression", "SVD progression"))
data$SVD_3groups_0611[data$SVD_3groups_0611=="0"] <- "Stable SVD"
data$SVD_3groups_0611[data$SVD_3groups_0611=="1"] <- "SVD regression"
data$SVD_3groups_0611[data$SVD_3groups_0611=="2"] <- "SVD progression"
data$SVD_3groups_0611 <- factor(data$SVD_3groups_0611, levels=c("Stable SVD", "SVD regression", "SVD progression"))
data$SVD_3groups_1115[data$SVD_3groups_1115=="0"] <- "Stable SVD"
data$SVD_3groups_1115[data$SVD_3groups_1115=="1"] <- "SVD regression"
data$SVD_3groups_1115[data$SVD_3groups_1115=="2"] <- "SVD progression"
data$SVD_3groups_1115 <- factor(data$SVD_3groups_1115, levels=c("Stable SVD", "SVD regression", "SVD progression"))
data$SVD_3groups_anytime[data$SVD_3groups_anytime=="0"] <- "Stable SVD"
data$SVD_3groups_anytime[data$SVD_3groups_anytime=="1"] <- "SVD regression"
data$SVD_3groups_anytime[data$SVD_3groups_anytime=="2"] <- "SVD progression"
data$SVD_3groups_anytime <- factor(data$SVD_3groups_anytime, levels=c("Stable SVD", "SVD regression", "SVD progression"))
data$WMH_change_anytime_group[data$WMH_change_anytime_group=="0"] <- "Stable WMH"
data$WMH_change_anytime_group[data$WMH_change_anytime_group=="1"] <- "WMH regression"
data$WMH_change_anytime_group[data$WMH_change_anytime_group=="2"] <- "WMH progression"
data$WMH_change_anytime_group <- factor(data$WMH_change_anytime_group, levels=c("Stable WMH", "WMH regression", "WMH progression"))
data$lacunes_change_anytime_group[data$lacunes_change_anytime_group=="0"] <- "Stable"
data$lacunes_change_anytime_group[data$lacunes_change_anytime_group=="1"] <- "Vanishing lacunes"
data$lacunes_change_anytime_group[data$lacunes_change_anytime_group=="2"] <- "Incident lacunes"
data$lacunes_change_anytime_group <- factor(data$lacunes_change_anytime_group, levels=c("Stable", "Vanishing lacunes", "Incident lacunes"))
data$microbleeds_change_anytime_group[data$microbleeds_change_anytime_group=="0"] <- "Stable"
data$microbleeds_change_anytime_group[data$microbleeds_change_anytime_group=="1"] <- "Vanishing microbleeds"
data$microbleeds_change_anytime_group[data$microbleeds_change_anytime_group=="2"] <- "Incident microbleeds"
data$microbleeds_change_anytime_group <- factor(data$microbleeds_change_anytime_group, levels=c("Stable", "Vanishing microbleeds", "Incident microbleeds"))
data.incl = data[data$Inclusie_SVD_Regression==1,]
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
#datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
mywidth<-8
myheight<-4
myres<-500
data.wmh.any.CI0615 <- summarySE(data.incl, measurevar="cognitiveindex0615", groupvars=c("WMH_change_anytime_group"), na.rm=T)
data.wmh.any.CI0615.subset <- data.wmh.any.CI0615[complete.cases(data.wmh.any.CI0615),]
data.wmh.any.MEM0615 <- summarySE(data.incl, measurevar="memory0615", groupvars=c("WMH_change_anytime_group"), na.rm=T)
data.wmh.any.MEM0615.subset <- data.wmh.any.MEM0615[complete.cases(data.wmh.any.MEM0615),]
data.wmh.any.PS0615 <- summarySE(data.incl, measurevar="psychomotorspeed0615", groupvars=c("WMH_change_anytime_group"), na.rm=T)
data.wmh.any.PS0615.subset <- data.wmh.any.PS0615[complete.cases(data.wmh.any.PS0615),]
data.wmh.any.EXF0615 <- summarySE(data.incl, measurevar="executivefunction0615", groupvars=c("WMH_change_anytime_group"), na.rm=T)
data.wmh.any.EXF0615.subset <- data.wmh.any.EXF0615[complete.cases(data.wmh.any.EXF0615),]
data.wmh.any.cogn0615.subset <- rbind(data.wmh.any.CI0615.subset, data.wmh.any.MEM0615.subset, data.wmh.any.PS0615.subset, data.wmh.any.EXF0615.subset)
CognDomain <- c("Cognitive Index", "Cognitive Index", "Cognitive Index",
"Memory", "Memory", "Memory",
"Psychomotor speed", "Psychomotor speed", "Psychomotor speed",
"Executive function", "Executive function", "Executive function")
data.wmh.any.cogn0615 <- cbind(data.wmh.any.cogn0615.subset, CognDomain)
data.wmh.any.cogn0615$CognDomain <- factor(data.wmh.any.cogn0615$CognDomain,
levels=c("Cognitive Index", "Memory", "Psychomotor speed", "Executive function"))
ggplot(data.wmh.any.cogn0615, aes(x=CognDomain, y=mean, fill=WMH_change_anytime_group)) +
geom_bar(position=position_dodge(), stat="identity",
colour="black", size=.3, width=.5
) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.1, position=position_dodge(0.5)) +
labs(x="", y = "Cognitive decline, z-score") +
coord_cartesian(ylim=c(-.6,-0.028)) +
scale_fill_manual(values=c("gray80", "gray40", "gray0"), name="WMH change") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_discrete(position = "top") +
theme(axis.text.x = element_text(colour="black",size=10),
axis.title.y = element_text(colour="black",size=12))
data.lac.any.CI0615 <- summarySE(data.incl, measurevar="cognitiveindex0615", groupvars=c("lacunes_change_anytime_group"), na.rm=T)
data.lac.any.CI0615.subset <- data.lac.any.CI0615[complete.cases(data.lac.any.CI0615),]
data.lac.any.MEM0615 <- summarySE(data.incl, measurevar="memory0615", groupvars=c("lacunes_change_anytime_group"), na.rm=T)
data.lac.any.MEM0615.subset <- data.lac.any.MEM0615[complete.cases(data.lac.any.MEM0615),]
data.lac.any.PS0615 <- summarySE(data.incl, measurevar="psychomotorspeed0615", groupvars=c("lacunes_change_anytime_group"), na.rm=T)
data.lac.any.PS0615.subset <- data.lac.any.PS0615[complete.cases(data.lac.any.PS0615),]
data.lac.any.EXF0615 <- summarySE(data.incl, measurevar="executivefunction0615", groupvars=c("lacunes_change_anytime_group"), na.rm=T)
data.lac.any.EXF0615.subset <- data.lac.any.EXF0615[complete.cases(data.lac.any.EXF0615),]
data.lac.any.cogn0615.subset <- rbind(data.lac.any.CI0615.subset, data.lac.any.MEM0615.subset, data.lac.any.PS0615.subset, data.lac.any.EXF0615.subset)
CognDomain <- c("Cognitive Index", "Cognitive Index", "Cognitive Index",
"Memory", "Memory", "Memory",
"Psychomotor speed", "Psychomotor speed", "Psychomotor speed",
"Executive function", "Executive function", "Executive function")
data.lac.any.cogn0615 <- cbind(data.lac.any.cogn0615.subset, CognDomain)
data.lac.any.cogn0615$CognDomain <- factor(data.lac.any.cogn0615$CognDomain,
levels=c("Cognitive Index", "Memory", "Psychomotor speed", "Executive function"))
ggplot(data.lac.any.cogn0615, aes(x=CognDomain, y=mean, fill=lacunes_change_anytime_group)) +
geom_bar(position=position_dodge(), stat="identity",
colour="black", size=.3, width=.5
) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.1, position=position_dodge(0.5)) +
labs(x="", y = "Cognitive decline, z-score") +
coord_cartesian(ylim=c(-.6,-0.028)) +
scale_fill_manual(values=c("gray80", "gray40", "gray0"), name="Lacunes change") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_discrete(position = "top") +
theme(axis.text.x = element_text(colour="black",size=10),
axis.title.y = element_text(colour="black",size=12))
data.mb.any.CI0615 <- summarySE(data.incl, measurevar="cognitiveindex0615", groupvars=c("microbleeds_change_anytime_group"), na.rm=T)
data.mb.any.CI0615.subset <- data.mb.any.CI0615[complete.cases(data.mb.any.CI0615),]
data.mb.any.MEM0615 <- summarySE(data.incl, measurevar="memory0615", groupvars=c("microbleeds_change_anytime_group"), na.rm=T)
data.mb.any.MEM0615.subset <- data.mb.any.MEM0615[complete.cases(data.mb.any.MEM0615),]
data.mb.any.PS0615 <- summarySE(data.incl, measurevar="psychomotorspeed0615", groupvars=c("microbleeds_change_anytime_group"), na.rm=T)
data.mb.any.PS0615.subset <- data.mb.any.PS0615[complete.cases(data.mb.any.PS0615),]
data.mb.any.EXF0615 <- summarySE(data.incl, measurevar="executivefunction0615", groupvars=c("microbleeds_change_anytime_group"), na.rm=T)
data.mb.any.EXF0615.subset <- data.mb.any.EXF0615[complete.cases(data.mb.any.EXF0615),]
data.mb.any.cogn0615.subset <- rbind(data.mb.any.CI0615.subset, data.mb.any.MEM0615.subset, data.mb.any.PS0615.subset, data.mb.any.EXF0615.subset)
CognDomain <- c("Cognitive Index", "Cognitive Index", "Cognitive Index",
"Memory", "Memory", "Memory",
"Psychomotor speed", "Psychomotor speed", "Psychomotor speed",
"Executive function", "Executive function", "Executive function")
data.mb.any.cogn0615 <- cbind(data.mb.any.cogn0615.subset, CognDomain)
data.mb.any.cogn0615$CognDomain <- factor(data.mb.any.cogn0615$CognDomain,
levels=c("Cognitive Index", "Memory", "Psychomotor speed", "Executive function"))
ggplot(data.mb.any.cogn0615, aes(x=CognDomain, y=mean, fill=microbleeds_change_anytime_group)) +
geom_bar(position=position_dodge(), stat="identity",
colour="black", size=.3, width=.5
) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.1, position=position_dodge(0.5)) +
labs(x="", y = "Cognitive decline, z-score") +
coord_cartesian(ylim=c(-.6,-0.028)) +
scale_fill_manual(values=c("gray80", "gray40", "gray0"), name="Microbleeds change") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_discrete(position = "top") +
theme(axis.text.x = element_text(colour="black",size=10),
axis.title.y = element_text(colour="black",size=12))
library(ggplot2)
library(sjPlot)
library(lmerTest)
library(mice)
spaghettiPlot <- function(x, y, group, xLab, yLab) {
ggplot(df, aes(x, y, group=group)) +
geom_line() + geom_point() +
stat_smooth(aes(group=1), method=lm, colour="#cc0000", fill="#c3c3c3", alpha=0.6) +
theme_bw(base_size=22) +
labs(x=xLab, y=yLab)
}
scatterPlot <- function(x, y, m, xLab, yLab, mLab) {
ggplot(df, aes(x, y)) + geom_point(aes(color=m), size=2) +
scale_color_gradient(low="cyan", high="blue") +
labs(x=xLab, y=yLab, colour=mLab) +
theme_classic()
}
df <- read.csv("../data/RUNDMC_data_long.csv", sep=";", dec=",")
df$subject <- factor(df$rundmcs)
df$logwmh <- log(df$wmh)
df$age06 <- (df$age06) #scale
df$agesq <- df$age06^2
df$timesq <- df$time^2
df$times <- as.factor(df$times)
setwd("G:/Documenten_Esther/OiO/Cambridge/RUNDMC_LGM/cognitive_decline_LME/temp")
df <- read.csv("../data/RUNDMC_data_long.csv", sep=";", dec=",")
df$subject <- factor(df$rundmcs)
df$logwmh <- log(df$wmh)
df$age06 <- (df$age06) #scale
df$agesq <- df$age06^2
df$timesq <- df$time^2
df$times <- as.factor(df$times)
df2 <- read.csv("../data/RUNDMC_data_wide.csv", sep=";", dec=",")
spaghettiPlot(df$age, df$cognitiveindex, df$subject,
"Age", "Cognitive index")
spaghettiPlot(df$logwmh, df$cognitiveindex, df$subject,
"White matter hyperintensities", "Cognitive index")
spaghettiPlot(df$hv, df$cognitiveindex, df$rundmcs,
"Hippocampal volume", "Cognitive index")
scatterPlot(df$logwmh, df$cognitiveindex, df$age,
"White matter hyperintensities", "Cognitive index", "Age")
scatterPlot(df$logwmh, df$cognitiveindex, df$age,
"White matter hyperintensities", "Cognitive index", "Age")
scatterPlot(df$hv, df$cognitiveindex, df$age,
"Hippocampal volumes", "Cognitive index", "Age")
scatterPlot(df$logwmh, df$memory, df$age,
"WMH volume (log ml)", "Memory (z-score)", "Age (years)")
scatterPlot(df$hv, df$memory, df$age,
"Hippocampal volume (ml)", "Memory (z-score)", "Age (years)")
library(ggplot2)
library(sjPlot)
library(lmerTest)
library(mice)
spaghettiPlot <- function(x, y, group, xLab, yLab) {
ggplot(df, aes(x, y, group=group)) +
geom_line() + geom_point() +
stat_smooth(aes(group=1), method=lm, colour="#cc0000", fill="#c3c3c3", alpha=0.6) +
theme_bw(base_size=22) +
labs(x=xLab, y=yLab)
}
scatterPlot <- function(x, y, m, xLab, yLab, mLab) {
ggplot(df, aes(x, y)) + geom_point(aes(color=m), size=2) +
scale_color_gradient(low="cyan", high="blue") +
labs(x=xLab, y=yLab, colour=mLab) +
theme_classic()
}
df <- read.csv("../data/RUNDMC_data_long.csv", sep=";", dec=",")
df$subject <- factor(df$rundmcs)
df$logwmh <- log(df$wmh)
df$em <- (df$immediatememory + df$delayedmemory)/2
scatterPlot(df$logwmh, df$memory, df$age,
"WMH volume (log ml)", "Memory (z-score)", "Age (years)")
scatterPlot(df$hv, df$memory, df$age,
"Hippocampal volume (ml)", "Memory (z-score)", "Age (years)")
scatterPlot(df$logwmh, df$workingmemory, df$age,
"WMH volume (log ml)", "Working Memory (z-score)", "Age (years)")
scatterPlot(df$hv, df$workingmemory, df$age,
"Hippocampal volume (ml)", "Working Memory (z-score)", "Age (years)")
scatterPlot(df$logwmh, df$em, df$age,
"WMH volume (log ml)", "Episodic Memory (z-score)", "Age (years)")
scatterPlot(df$hv, df$em, df$age,
"Hippocampal volume (ml)", "Episodic Memory (z-score)", "Age (years)")
packageVersion(“lavaan”)
package_version(lavaan)
library(lavaan)
package_version(lavaan)
packageVersion(“lavaan”)
package_version("lavaan")
