intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names, var4, var4names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "),
"+", paste(var1names, var2names, sep="*"))
sem2form <- paste(var3names, var4names, sep="~")
test <- file("../../temp/cross_wmh_hv_ps_5.lav")
writeLines(c("# regressions",
sem1form,
sem2form),
test)
close(test)
}
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names, var4, var4names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var3names, var4names, sep=" ~ ")
test <- file("../../temp/cross_wmh_hv_ps_5.lav")
writeLines(c("# regressions",
sem1form,
sem2form),
test)
close(test)
}
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
model <- readLines("../../temp/cross_wmh_hv_ps_5.lav")
fit <- sem(model,
data=df.subset)
summary(fit, standardized=T, rsquare=T)
fitMeasures(fit)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
int06
df$int06
summary(fit, standardized=T, rsquare=T)
MakeLatentStrings <- function(latVar, latVarNames) {
latSlope <- paste(latVar, "slope", sep="_")
latInt <- paste(latVar, "int", sep="_")
timeVec <- character()
for (times in range(0, length(latVarNames)-1)) {
timeVec <- c(timeVec, times)
}
latSlopeForm <- paste(latSlope, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
latIntForm <- paste(latInt, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
}
fitMeasures(fit)
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names, var4, var4names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var3names, var4names, sep=" ~ ")
sem3form <- paste(var1names, var2names, sep=" ~~ ")
sem4form <- paste(var1names, var4names, sep=" ~~ ")
sem5form <- paste(var2names, var4names, sep=" ~~ ")
test <- file("../../temp/cross_wmh_hv_ps_6.lav")
writeLines(c("# regressions",
sem1form,
sem2form,
"
",
"# covariances",
sem3form,
sem4form,
sem5form),
test)
close(test)
}
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
model <- readLines("../../temp/cross_wmh_hv_ps_6.lav")
fit <- sem(model,
data=df.subset)
varTable(fit)
summary(fit, standardized=T, rsquare=T)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
summary(fit, standardized=T, rsquare=T)
fitMeasures(fit)
semPaths(fit, "stand", sizeMan = 12, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
library(lavaan)
library(semPlot)
library(ggraph)
library(ggplot2)
MakeLatentStrings <- function(latVar, latVarNames) {
latSlope <- paste(latVar, "slope", sep="_")
latInt <- paste(latVar, "int", sep="_")
timeVec <- character()
for (times in range(0, length(latVarNames)-1)) {
timeVec <- c(timeVec, times)
}
latSlopeForm <- paste(latSlope, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
latIntForm <- paste(latInt, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
}
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var1names, var2names, sep=" ~~ ")
test <- file("../../temp/cross_wmh_hv_exf_2.lav")
writeLines(c("# regressions",
sem1form,
"
",
"# covariances",
sem2form),
test)
close(test)
}
volVars <- c("logwmh")
hpcVars <- c("hv")
cognVars <- c("exf")
timepoints <- c("06")
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
exf <- c("fluencya", "fluencyb", "stroopinterference", "vsattotalsat")
exfVars <- paste(exf, "06", sep="")
df$exf06 <- rowSums(df[exfVars])
exf <- c("fluencyanimals", "fluencyjobs", "stroopinterference", "vsattotalsat")
exfVars <- paste(exf, "06", sep="")
df$exf06 <- rowSums(df[exfVars])
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
variables <- c(i, j, k)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 3)]
volNames <- varNames[seq(2, vecLen, 3)]
cognNames <- varNames[seq(3, vecLen, 3)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames)
}
}
}
model <- readLines("../../temp/cross_wmh_hv_exf_2.lav")
fit <- sem(model,
data=df.subset)
summary(fit, standardized=T, rsquare=T)
fitMeasures(fit)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
summary(fit, standardized=T, rsquare=T)
MakeLatentStrings <- function(latVar, latVarNames) {
latSlope <- paste(latVar, "slope", sep="_")
latInt <- paste(latVar, "int", sep="_")
timeVec <- character()
for (times in range(0, length(latVarNames)-1)) {
timeVec <- c(timeVec, times)
}
latSlopeForm <- paste(latSlope, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
latIntForm <- paste(latInt, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
}
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names, var4, var4names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var3names, var4names, sep=" ~ ")
sem3form <- paste(var1names, var2names, sep=" ~~ ")
sem4form <- paste(var1names, var4names, sep=" ~~ ")
sem5form <- paste(var2names, var4names, sep=" ~~ ")
test <- file("../../temp/cross_wmh_hv_exf_6.lav")
writeLines(c("# regressions",
sem1form,
sem2form,
"
",
"# covariances",
sem3form,
sem4form,
sem5form),
test)
close(test)
}
volVars <- c("logwmh")
hpcVars <- c("hv")
cognVars <- c("ps")
intVars <- c("int")
timepoints <- c("06")
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
exf <- c("fluencyanimals", "fluencyjobs", "stroopinterference", "vsattotalsat")
exfVars <- paste(exf, "06", sep="")
df$exf06 <- rowSums(df[exfVars])
df$int06 <- df$logwmh06*df$wmh06
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
volVars <- c("logwmh")
hpcVars <- c("hv")
cognVars <- c("exf")
intVars <- c("int")
timepoints <- c("06")
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
exf <- c("fluencyanimals", "fluencyjobs", "stroopinterference", "vsattotalsat")
exfVars <- paste(exf, "06", sep="")
df$exf06 <- rowSums(df[exfVars])
df$int06 <- df$logwmh06*df$wmh06
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
model <- readLines("../../temp/cross_wmh_hv_exf_6.lav")
fit <- sem(model,
data=df.subset)
summary(fit, standardized=T, rsquare=T)
fitMeasures(fit)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
summary(fit, standardized=T, rsquare=T)
MakeLatentStrings <- function(latVar, latVarNames) {
latSlope <- paste(latVar, "slope", sep="_")
latInt <- paste(latVar, "int", sep="_")
timeVec <- character()
for (times in range(0, length(latVarNames)-1)) {
timeVec <- c(timeVec, times)
}
latSlopeForm <- paste(latSlope, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
latIntForm <- paste(latInt, "=~",
paste("1*", latVarNames, sep="", collapse=" + "))
}
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var1names, var2names, sep=" ~~ ")
test <- file("../../temp/cross_wmh_hv_mem_2.lav")
writeLines(c("# regressions",
sem1form,
"
",
"# covariances",
sem2form),
test)
close(test)
}
volVars <- c("logwmh")
hpcVars <- c("hv")
cognVars <- c("mem")
timepoints <- c("06")
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
mem <- c("wvlt123correctmean", "wvltdelayrecall", "reyimmrecalltotalscore",
"reydelayrecalltotalscore", "pp2sat", "pp3sat")
memVars <- paste(mem, "06", sep="")
df$mem06 <- rowSums(df[memVars])
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
variables <- c(i, j, k)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 3)]
volNames <- varNames[seq(2, vecLen, 3)]
cognNames <- varNames[seq(3, vecLen, 3)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames)
}
}
}
model <- readLines("../../temp/cross_wmh_hv_mem_2.lav")
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
fit <- sem(model,
data=df.subset)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
fitMeasures(fit)
summary(fit, standardized=T, rsquare=T)
ThreeFactorSEM <- function(var1, var1names, var2, var2names, var3, var3names, var4, var4names) {
sem1form <- paste(var3names, "~", paste(var1names, var2names, sep=" + "))
sem2form <- paste(var3names, var4names, sep=" ~ ")
sem3form <- paste(var1names, var2names, sep=" ~~ ")
sem4form <- paste(var1names, var4names, sep=" ~~ ")
sem5form <- paste(var2names, var4names, sep=" ~~ ")
test <- file("../../temp/cross_wmh_hv_mem_6.lav")
writeLines(c("# regressions",
sem1form,
sem2form,
"
",
"# covariances",
sem3form,
sem4form,
sem5form),
test)
close(test)
}
volVars <- c("logwmh")
hpcVars <- c("hv")
cognVars <- c("mem")
intVars <- c("int")
timepoints <- c("06")
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
mem <- c("wvlt123correctmean", "wvltdelayrecall", "reyimmrecalltotalscore",
"reydelayrecalltotalscore", "pp2sat", "pp3sat")
memVars <- paste(mem, "06", sep="")
df$mem06 <- rowSums(df[memVars])
df$int06 <- df$logwmh06*df$wmh06
for (i in hpcVars) {
for (j in volVars) {
for (k in cognVars) {
for (l in intVars) {
variables <- c(i, j, k, l)
varNames <- c(as.vector(outer(variables, timepoints, paste, sep="")))
vecLen <- length(varNames)
hpcNames <- varNames[seq(1, vecLen, 4)]
volNames <- varNames[seq(2, vecLen, 4)]
cognNames <- varNames[seq(3, vecLen, 4)]
intNames <- varNames[seq(4, vecLen, 4)]
df.subset <- df[varNames]
df.subset <- df.subset[complete.cases(df.subset), ]
ThreeFactorSEM(i, hpcNames, j, volNames, k, cognNames, l, intNames)
}
}
}
}
model <- readLines("../../temp/cross_wmh_hv_mem_6.lav")
fit <- sem(model,
data=df.subset)
semPaths(fit, "stand", sizeMan = 14, label.cex = 2.3, shapeMan = "square", nCharNodes = 0, edge.label.cex = 3,
residuals=F, edge.color = "black", edge.width = 0.5)
summary(fit, standardized=T, rsquare=T)
fitMeasures(fit)
summary(fit, standardized=T, rsquare=T)
library
library(psych)
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
df.incl = df[df$Inclusion==1,]
df$ps06 <- df$pp1sat06 + df$stroop1sat06 + df$stroop2sat06 + df$ldstcorrect06
df$ps11 <- df$pp1sat11 + df$stroop1sat11 + df$stroop2sat11 + df$ldstcorrect11
df$ps15 <- df$pp1sat15 + df$stroop1sat15 + df$stroop2sat15 + df$ldstcorrect15
mem06 <- df$wvlt123correctmean06 + df$wvltdelayrecall06 +
df$reyimmrecalltotalscore06 +	df$reydelayrecalltotalscore06 +
df$pp2sat06 + df$pp3sat06
mem11 <- df$wvlt123correctmean11 + df$wvltdelayrecall11 +
df$reyimmrecalltotalscore11 +	df$reydelayrecalltotalscore11 +
df$pp2sat11 + df$pp3sat11
mem15 <- df$wvlt123correctmean15 + df$wvltdelayrecall15 +
df$reyimmrecalltotalscore15 +	df$reydelayrecalltotalscore15 +
df$pp2sat15 + df$pp3sat15
exf06 <- df$fluencyanimals06 + df$fluencyjobs06 + df$stroopinterference06 +	df$vsattotalsat06
exf11 <- df$fluencyanimals11 + df$fluencyjobs11 + df$stroopinterference11 +	df$vsattotalsat11
exf15 <- df$fluencysupermarket15 + df$fluencyjobs15 + df$stroopinterference15 +	df$vsattotalsat15
df$ps06 <- df$pp1sat06 + df$stroop1sat06 + df$stroop2sat06 + df$ldstcorrect06
df$mem06 <- df$wvlt123correctmean06 + df$wvltdelayrecall06 +
df$reyimmrecalltotalscore06 +	df$reydelayrecalltotalscore06 +
df$pp2sat06 + df$pp3sat06
df$mem11 <- df$wvlt123correctmean11 + df$wvltdelayrecall11 +
df$reyimmrecalltotalscore11 +	df$reydelayrecalltotalscore11 +
df$pp2sat11 + df$pp3sat11
df$mem15 <- df$wvlt123correctmean15 + df$wvltdelayrecall15 +
df$reyimmrecalltotalscore15 +	df$reydelayrecalltotalscore15 +
df$pp2sat15 + df$pp3sat15
df$exf06 <- df$fluencyanimals06 + df$fluencyjobs06 + df$stroopinterference06 +	df$vsattotalsat06
df$exf11 <- df$fluencyanimals11 + df$fluencyjobs11 + df$stroopinterference11 +	df$vsattotalsat11
df$exf15 <- df$fluencysupermarket15 + df$fluencyjobs15 + df$stroopinterference15 +	df$vsattotalsat15
variables06 <- c("wmh06", "hv06", "ps06", "mem06", "exf06")
df06 <- df[variables06]
variables06 <- c("wmh06", "hv06", "ps06", "mem06", "exf06")
df06 <- df[variables06]
corr06.mat <- corr.test(df06)
summary(corr06.mat)
corr06.mat
variables11 <- c("wmh11", "hv11", "ps11", "mem11", "exf11")
df11 <- df[variables11]
variables15 <- c("wmh15", "hv15", "ps15", "mem15", "exf15")
df15 <- df[variables15]
corr06.mat <- corr.test(df06)
summary(corr06.mat)
corr11.mat <- corr.test(df11)
summary(corr11.mat)
corr15.mat <- corr.test(df15)
summary(corr15.mat)
corr11.mat
corr15.mat
variables <- c("wmh06", "hv06", "ps06", "mem06", "exf06",
"wmh11", "hv11", "ps11", "mem11", "exf11",
"wmh15", "hv15", "ps15", "mem15", "exf15")
df.var <- df[variables]
df.var.subset <- df.var[complete.cases(df.var), ]
df.var.incl <- df.var[complete.cases(df.var), ]
variables06 <- c("wmh06", "hv06", "ps06", "mem06", "exf06")
df.var.incl06 <- df.var.incl[variables06]
variables11 <- c("wmh11", "hv11", "ps11", "mem11", "exf11")
df.var.incl11 <- df.var.incl[variables11]
variables15 <- c("wmh15", "hv15", "ps15", "mem15", "exf15")
df.var.incl15 <- df.var.incl[variables15]
corr06.mat <- corr.test(df.var.incl06)
corr11.mat <- corr.test(df.var.incl11)
corr15.mat <- corr.test(df.var.incl15)
corr06.mat
corr11.mat
corr15.mat
df.cross <- as.data.frame(matrix(0, ncol=12, nrow=5))
df.cross[1:5,1] <- round(corr06.mat$r[1:5,1], digits=3)
df.cross[1:5,2] <- round(corr06.mat$p[1:5,1], digits=3)
df.cross[1:5,3] <- round(corr11.mat$r[1:5,1], digits=3)
df.cross[1:5,4] <- round(corr11.mat$p[1:5,1], digits=3)
df.cross[1:5,5] <- round(corr15.mat$r[1:5,1], digits=3)
df.cross[1:5,6] <- round(corr15.mat$p[1:5,1], digits=3)
df.cross[1:5,7] <- round(corr06.mat$r[1:5,2], digits=3)
df.cross[1:5,8] <- round(corr06.mat$p[1:5,2], digits=3)
df.cross[1:5,9] <- round(corr11.mat$r[1:5,2], digits=3)
df.cross[1:5,10] <- round(corr11.mat$p[1:5,2], digits=3)
df.cross[1:5,11] <- round(corr15.mat$r[1:5,2], digits=3)
df.cross[1:5,12] <- round(corr15.mat$p[1:5,2], digits=3)
rownames(df.cross) <- c("wmh", "hv", "psychomotor speed", "memory", "executive function")
colnames(df.cross) <- c("wmh06", "p-val", "wmh11", "p-val", "wmh15", "p-val",
"hv06", "p-val", "hv11", "p-val", "hv15", "p-val")
View(df.cross)
corr06.mat
library(ggplot2)
datafile <- "../../data/RUNDMC_datasheet_long.csv"
df <- read.csv(datafile, header=T)
dem.wmh.age.plot <- ggplot(dem, aes(x=age, y=wmh, group=rundmcs)) +
geom_line() +
geom_point() +
stat_smooth(aes(group=1), method=lm, colour="#cc0000", fill="#c3c3c3", alpha=0.6) +
facet_grid(.~dementiai) +
theme_bw(base_size=22)
